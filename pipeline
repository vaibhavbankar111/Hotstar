pipeline{
    agent any
    tools{
        jdk 'jdk17'
        nodejs 'node21'
    }
    environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages {
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        stage('Checkout from Git'){
            steps{
                git branch: 'main', url: 'https://github.com/DoesntMatterPrivateLimited/pk_hotstar.git'
            }
        }
        // stage("Sonarqube Analysis "){
        //     steps{
        //         withSonarQubeEnv('sonar-server') {
        //             sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Netflix \
        //             -Dsonar.projectKey=Netflix '''
        //         }
        //     }
        // }
        
        // stage('Install Dependencies') {
        //     steps {
        //         sh "npm install"
        //     }
        // }
        
        // stage('TRIVY FS SCAN') {
        //     steps {
        //         sh "trivy fs . > trivyfs.txt"
        //     }
        // }
        // stage("Docker Build & Push"){
        //     steps{
        //         script{
        //           withDockerRegistry(credentialsId: 'docker', toolName: 'docker'){   
        //               sh "docker build -t hotstar ."
        //               sh "docker tag hotstar hackerboypk/hotstar:latest "
        //               sh "docker push hackerboypk/hotstar:latest "
        //             }
        //         }
        //     }
        // }
        // stage("TRIVY"){
        //     steps{
        //         sh "trivy image hackerboypk/hotstar:latest > trivyimage.txt" 
        //     }
        // }
       stage('Deploy to kubernets'){
            steps{
                script{
                    dir('K8S') {
                                sh 'kubectl config use-context minikube'
                                sh 'kubectl apply -f deployment.yml --validate=false'
                                sh 'kubectl apply -f service.yml --validate=false'
                    
                    }
                }
            }
        }
        }

    
}
